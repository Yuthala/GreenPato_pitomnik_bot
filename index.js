const { Telegraf, Markup } = require('telegraf');
const { message } = require('telegraf/filters');
require('dotenv').config();
const text = require('./const');

const bot = new Telegraf(process.env.BOT_TOKEN);


bot.start((ctx) => ctx.reply(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${ctx.message.from.first_name ? ctx.message.from.first_name : '–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü'}! –ö–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,getMainMenu()))
bot.help((ctx) => ctx.reply(text.commands))

// bot.use(ctx => {console.log(ctx.update.message.message_id)})
// bot.on(message('sticker'), (ctx) => ctx.reply('üëç'))
//bot.hears('hi', (ctx) => ctx.reply('Hey there')) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º?


// –ï—Å–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å –º–µ–Ω—é –ø–æ –∫–æ–º–∞–Ω–¥–µ /ask
    bot.command('ask', async (ctx) => {
        try {
       await ctx.replyWithHTML('<b>–í–æ–ø—Ä–æ—Å—ã</b>', Markup.inlineKeyboard(
            [
                [Markup.button.callback('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑', 'btn_1')],
                [Markup.button.callback('–î–µ–ø–æ–∑–∏—Ç –Ω–µ –≤–µ—Ä–Ω—É–ª—Å—è', 'btn_2')],
                [Markup.button.callback('–¢–∞—Ä–∏—Ñ—ã –∏ —É—Å–ª–æ–≤–∏—è –∞—Ä–µ–Ω–¥—ã(–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã)', 'btn_3')],
                [Markup.button.callback('–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ', 'btn_4')],
                [Markup.button.callback('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑', 'btn_5')],
                [Markup.button.callback('–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä –Ω–µ –≤—ã—à–µ–ª –∏–∑ —Å–ª–æ—Ç–∞', 'btn_6')]
                // [Markup.button.callback('–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä —É–≤–µ–∑–µ–Ω/—É—Ç–µ—Ä—è–Ω/—É–∫—Ä–∞–¥–µ–Ω', 'btn_7')]
            ]
        ))
    
        } catch(e) {
            console.error(e)
        }
        
    })

// –ï—Å–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å –º–µ–Ω—é –ø–æ –∫–æ–º–∞–Ω–¥–µ /start 
    function getMainMenu() {
        return Markup.inlineKeyboard(
            [
                [Markup.button.callback('–ê—Ä–µ–Ω–¥–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å', 'btn_1')],
                [Markup.button.callback('–î–µ–ø–æ–∑–∏—Ç –Ω–µ –≤–µ—Ä–Ω—É–ª—Å—è', 'btn_2')],
                [Markup.button.callback('–¢–∞—Ä–∏—Ñ—ã –∏ —É—Å–ª–æ–≤–∏—è –∞—Ä–µ–Ω–¥—ã(–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã)', 'btn_3')],
                [Markup.button.callback('–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ', 'btn_4')],
                [Markup.button.callback('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑', 'btn_5')],
                [Markup.button.callback('–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä –Ω–µ –≤—ã—à–µ–ª –∏–∑ —Å–ª–æ—Ç–∞', 'btn_6')]
                // [Markup.button.callback('–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä —É–≤–µ–∑–µ–Ω/—É—Ç–µ—Ä—è–Ω/—É–∫—Ä–∞–¥–µ–Ω', 'btn_7')]
            ]
        )
    }

    bot.on("message", async (ctx) => {
        console.log(`ctx.message ${ctx.message}`);
        const msgId = ctx.update.message.message_id;
        // const fromId = ctx.callbackQuery.from.id;
        const id = '573562828';

        console.log(`message_id ${msgId}`);

        try {
            // if(text !== '/start') {
                await ctx.forwardMessage(id, msgId);
                // await ctx.bot.sendMessage(chatId, '–°–¥–µ–ª–∞–Ω –∑–∞–∫–∞–∑')
            //} 
        } catch (e) {
            console.error(e)
        }
    })

function addActionBot(name, text) {
    bot.action(name, async (ctx) => {

        // console.log(ctx.update.message);
        //const chatId = ctx.message.chat.id
        // const text = ctx.message.text
        const msgId = ctx.update.message.message_id
        const fromId = ctx.callbackQuery.from.id;
        const id = '573562828';

        try {
            if(text !== '/start') {
                await ctx.forwardMessage(id, msgId, fromId);
                // await ctx.bot.sendMessage(chatId, '–°–¥–µ–ª–∞–Ω –∑–∞–∫–∞–∑')
            }

            // await ctx.answerCbQuery()
            // if (src !== false) {
            //     await ctx.replyWithPhoto({
            //         source: src
            //     })
            // }
        //   await ctx.replyWithHTML(text, {
        //     disable_web_page_preview: true
        //   }) 

        //   await ctx.telegram.forwardMessage(id, chatId)
        //   await ctx.telegram.forwardMessage(whereToSendId, ctx.message.chat.id, ctx.message.message_id).then(function(){
        //     console.log("mesage forwaded")
        //     });
        } catch (e) {
            console.error(e)
        }
    })
}
// addActionBot('btn_1', text.btn_1Text)
// // addActionBot('btn_2',false, text.btn_2Text)
// // addActionBot('btn_3',false, text.btn_3Text)
// addActionBot('btn_5', text.btn_5Text)

bot.launch()

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))